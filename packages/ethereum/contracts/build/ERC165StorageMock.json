{
  "contractName": "ERC165StorageMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "registerInterface",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"registerInterface\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC165StorageMock.sol\":\"ERC165StorageMock\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC165StorageMock.sol\":{\"keccak256\":\"0x3503533c82bf29eb93e3c2ed62f7850f3cd874584ecb8be4ed4715972f44f454\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://810472e592f3fb70aebe0f9a27195c092597844b1f027f70a665df300315a9b7\",\"dweb:/ipfs/QmYaQsxyAzWJEba9uDsYPWEqCKRDtzzNF9fDGPuvWtupJM\"]},\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/ERC165Storage.sol\":{\"keccak256\":\"0x90716b47325c5cd49d4eef5bbe4cba711c81ce317479038e4f0a9a17a206945a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abab613a1bff1c82cecf493e2fa4f940a21151f477d46e9593e14ee87a7f8be0\",\"dweb:/ipfs/QmXTm38aLpUaAwxBLXhtcLFmeDNLXQVhqGdbkY3mvZm1zD\"]},\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103bc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063214cdb801461006b575b600080fd5b6100556004803603810190610050919061025e565b610087565b60405161006291906102bd565b60405180910390f35b6100856004803603810190610080919061025e565b6100fe565b005b60006100928261010a565b806100f75750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b61010781610174565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d4906102d8565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000813590506102588161036f565b92915050565b60006020828403121561027457610273610341565b5b600061028284828501610249565b91505092915050565b61029481610309565b82525050565b60006102a7601c836102f8565b91506102b282610346565b602082019050919050565b60006020820190506102d2600083018461028b565b92915050565b600060208201905081810360008301526102f18161029a565b9050919050565b600082825260208201905092915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600080fd5b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b61037881610315565b811461038357600080fd5b5056fea2646970667358221220ba0696fc9ba22995fb97db80f741338a80f19dc0edf2b5211ccd4903504bac7464736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063214cdb801461006b575b600080fd5b6100556004803603810190610050919061025e565b610087565b60405161006291906102bd565b60405180910390f35b6100856004803603810190610080919061025e565b6100fe565b005b60006100928261010a565b806100f75750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b61010781610174565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d4906102d8565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000813590506102588161036f565b92915050565b60006020828403121561027457610273610341565b5b600061028284828501610249565b91505092915050565b61029481610309565b82525050565b60006102a7601c836102f8565b91506102b282610346565b602082019050919050565b60006020820190506102d2600083018461028b565b92915050565b600060208201905081810360008301526102f18161029a565b9050919050565b600082825260208201905092915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600080fd5b7f4552433136353a20696e76616c696420696e7465726661636520696400000000600082015250565b61037881610315565b811461038357600080fd5b5056fea2646970667358221220ba0696fc9ba22995fb97db80f741338a80f19dc0edf2b5211ccd4903504bac7464736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2671:176",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:86:176",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "68:29:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "90:6:176"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "77:12:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "77:20:176"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "68:5:176"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:176"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "106:25:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "106:32:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "106:32:176"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "36:6:176",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "44:3:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "52:5:176",
                "type": ""
              }
            ],
            "src": "7:137:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:262:176",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "261:83:176",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "263:77:176"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "263:79:176"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "263:79:176"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "236:7:176"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "245:9:176"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "232:3:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "232:23:176"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "257:2:176",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "228:3:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:32:176"
                  },
                  "nodeType": "YulIf",
                  "src": "225:2:176"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "354:116:176",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "369:15:176",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "383:1:176",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "373:6:176",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "398:62:176",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "432:9:176"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "443:6:176"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "428:3:176"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "428:22:176"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "452:7:176"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "408:19:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "408:52:176"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "398:6:176"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "185:9:176",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "196:7:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "208:6:176",
                "type": ""
              }
            ],
            "src": "150:327:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "542:50:176",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "559:3:176"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "579:5:176"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "564:14:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "564:21:176"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "552:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:34:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "552:34:176"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "530:5:176",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "537:3:176",
                "type": ""
              }
            ],
            "src": "483:109:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "744:220:176",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "754:74:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "820:3:176"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "825:2:176",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "761:58:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "761:67:176"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "754:3:176"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "926:3:176"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
                      "nodeType": "YulIdentifier",
                      "src": "837:88:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:93:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "837:93:176"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "939:19:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "950:3:176"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "955:2:176",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "946:3:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:12:176"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "939:3:176"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "732:3:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "740:3:176",
                "type": ""
              }
            ],
            "src": "598:366:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1062:118:176",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1072:26:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1084:9:176"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1095:2:176",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1080:3:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:18:176"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1072:4:176"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1146:6:176"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1159:9:176"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1170:1:176",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1155:3:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1155:17:176"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1108:37:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:65:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1108:65:176"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1034:9:176",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1046:6:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1057:4:176",
                "type": ""
              }
            ],
            "src": "970:210:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1357:248:176",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1367:26:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1379:9:176"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:2:176",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1375:3:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:18:176"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1367:4:176"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1414:9:176"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1425:1:176",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1410:3:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1410:17:176"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1433:4:176"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1439:9:176"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1429:3:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1429:20:176"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1403:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:47:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1403:47:176"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1459:139:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1593:4:176"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1467:124:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:131:176"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1459:4:176"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1337:9:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1352:4:176",
                "type": ""
              }
            ],
            "src": "1186:419:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1651:35:176",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1661:19:176",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1677:2:176",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1671:5:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:9:176"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1661:6:176"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1644:6:176",
                "type": ""
              }
            ],
            "src": "1611:75:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1788:73:176",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1805:3:176"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1810:6:176"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1798:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1798:19:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1798:19:176"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1826:29:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1845:3:176"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1850:4:176",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1841:3:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1841:14:176"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1826:11:176"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1760:3:176",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1765:6:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1776:11:176",
                "type": ""
              }
            ],
            "src": "1692:169:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1909:48:176",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1919:32:176",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1944:5:176"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1937:6:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:13:176"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1930:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1930:21:176"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1919:7:176"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1891:5:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1901:7:176",
                "type": ""
              }
            ],
            "src": "1867:90:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2007:105:176",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2017:89:176",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2032:5:176"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2039:66:176",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2028:3:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:78:176"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2017:7:176"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1989:5:176",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1999:7:176",
                "type": ""
              }
            ],
            "src": "1963:149:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2207:28:176",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2224:1:176",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2227:1:176",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2217:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:12:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2217:12:176"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2118:117:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2330:28:176",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2347:1:176",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:1:176",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2340:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:12:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2340:12:176"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2241:117:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2470:72:176",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2492:6:176"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2500:1:176",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2488:3:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2488:14:176"
                      },
                      {
                        "hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2504:30:176",
                        "type": "",
                        "value": "ERC165: invalid interface id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2481:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2481:54:176"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2481:54:176"
                }
              ]
            },
            "name": "store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2462:6:176",
                "type": ""
              }
            ],
            "src": "2364:178:176"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2590:78:176",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2646:16:176",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2655:1:176",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2658:1:176",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2648:6:176"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2648:12:176"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2648:12:176"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2613:5:176"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2637:5:176"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "2620:16:176"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2620:23:176"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2610:2:176"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2610:34:176"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2603:6:176"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2603:42:176"
                  },
                  "nodeType": "YulIf",
                  "src": "2600:2:176"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2583:5:176",
                "type": ""
              }
            ],
            "src": "2548:120:176"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC165: invalid interface id\")\n\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 176,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "110:154:46:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "110:154:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;523:188:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:102:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;523:188:165;608:4;631:36;655:11;631:23;:36::i;:::-;:73;;;;671:20;:33;692:11;671:33;;;;;;;;;;;;;;;;;;;;;;;;;;;631:73;624:80;;523:188;;;:::o;160:102:46:-;224:31;243:11;224:18;:31::i;:::-;160:102;:::o;763:155:163:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;1105:198:165:-;1203:10;1188:25;;:11;:25;;;;;1180:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1292:4;1256:20;:33;1277:11;1256:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1105:198;:::o;7:137:176:-;52:5;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;58:86;;;;:::o;150:327::-;208:6;257:2;245:9;236:7;232:23;228:32;225:2;;;263:79;;:::i;:::-;225:2;383:1;408:52;452:7;443:6;432:9;428:22;408:52;:::i;:::-;398:62;;354:116;215:262;;;;:::o;483:109::-;564:21;579:5;564:21;:::i;:::-;559:3;552:34;542:50;;:::o;598:366::-;740:3;761:67;825:2;820:3;761:67;:::i;:::-;754:74;;837:93;926:3;837:93;:::i;:::-;955:2;950:3;946:12;939:19;;744:220;;;:::o;970:210::-;1057:4;1095:2;1084:9;1080:18;1072:26;;1108:65;1170:1;1159:9;1155:17;1146:6;1108:65;:::i;:::-;1062:118;;;;:::o;1186:419::-;1352:4;1390:2;1379:9;1375:18;1367:26;;1439:9;1433:4;1429:20;1425:1;1414:9;1410:17;1403:47;1467:131;1593:4;1467:131;:::i;:::-;1459:139;;1357:248;;;:::o;1692:169::-;1776:11;1810:6;1805:3;1798:19;1850:4;1845:3;1841:14;1826:29;;1788:73;;;;:::o;1867:90::-;1901:7;1944:5;1937:13;1930:21;1919:32;;1909:48;;;:::o;1963:149::-;1999:7;2039:66;2032:5;2028:78;2017:89;;2007:105;;;:::o;2241:117::-;2350:1;2347;2340:12;2364:178;2504:30;2500:1;2492:6;2488:14;2481:54;2470:72;:::o;2548:120::-;2620:23;2637:5;2620:23;:::i;:::-;2613:5;2610:34;2600:2;;2658:1;2655;2648:12;2600:2;2590:78;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/ERC165Storage.sol\";\n\ncontract ERC165StorageMock is ERC165Storage {\n    function registerInterface(bytes4 interfaceId) public {\n        _registerInterface(interfaceId);\n    }\n}\n",
  "sourcePath": "C:/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC165StorageMock.sol",
  "ast": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC165StorageMock.sol",
    "exportedSymbols": {
      "ERC165": [
        21863
      ],
      "ERC165Storage": [
        22118
      ],
      "ERC165StorageMock": [
        7037
      ],
      "IERC165": [
        22189
      ]
    },
    "id": 7038,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7023,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:46"
      },
      {
        "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/ERC165Storage.sol",
        "file": "../utils/introspection/ERC165Storage.sol",
        "id": 7024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7038,
        "sourceUnit": 22119,
        "src": "58:50:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7025,
              "name": "ERC165Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22118,
              "src": "140:13:46"
            },
            "id": 7026,
            "nodeType": "InheritanceSpecifier",
            "src": "140:13:46"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7037,
        "linearizedBaseContracts": [
          7037,
          22118,
          21863,
          22189
        ],
        "name": "ERC165StorageMock",
        "nameLocation": "119:17:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7035,
              "nodeType": "Block",
              "src": "214:48:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7032,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7028,
                        "src": "243:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 7031,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22117,
                      "src": "224:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 7033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "224:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7034,
                  "nodeType": "ExpressionStatement",
                  "src": "224:31:46"
                }
              ]
            },
            "functionSelector": "214cdb80",
            "id": 7036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterface",
            "nameLocation": "169:17:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7028,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "194:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 7036,
                  "src": "187:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7027,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:20:46"
            },
            "returnParameters": {
              "id": 7030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:46"
            },
            "scope": 7037,
            "src": "160:102:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7038,
        "src": "110:154:46",
        "usedErrors": []
      }
    ],
    "src": "33:232:46"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC165StorageMock.sol",
    "exportedSymbols": {
      "ERC165": [
        21863
      ],
      "ERC165Storage": [
        22118
      ],
      "ERC165StorageMock": [
        7037
      ],
      "IERC165": [
        22189
      ]
    },
    "id": 7038,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7023,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:46"
      },
      {
        "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/ERC165Storage.sol",
        "file": "../utils/introspection/ERC165Storage.sol",
        "id": 7024,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7038,
        "sourceUnit": 22119,
        "src": "58:50:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7025,
              "name": "ERC165Storage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22118,
              "src": "140:13:46"
            },
            "id": 7026,
            "nodeType": "InheritanceSpecifier",
            "src": "140:13:46"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7037,
        "linearizedBaseContracts": [
          7037,
          22118,
          21863,
          22189
        ],
        "name": "ERC165StorageMock",
        "nameLocation": "119:17:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7035,
              "nodeType": "Block",
              "src": "214:48:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7032,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7028,
                        "src": "243:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 7031,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22117,
                      "src": "224:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 7033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "224:31:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7034,
                  "nodeType": "ExpressionStatement",
                  "src": "224:31:46"
                }
              ]
            },
            "functionSelector": "214cdb80",
            "id": 7036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterface",
            "nameLocation": "169:17:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7028,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "194:11:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 7036,
                  "src": "187:18:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7027,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:20:46"
            },
            "returnParameters": {
              "id": 7030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "214:0:46"
            },
            "scope": 7037,
            "src": "160:102:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7038,
        "src": "110:154:46",
        "usedErrors": []
      }
    ],
    "src": "33:232:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-05T11:01:08.875Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}