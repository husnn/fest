{
  "contractName": "EtherReceiverMock",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "acceptEther",
          "type": "bool"
        }
      ],
      "name": "setAcceptEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"acceptEther\",\"type\":\"bool\"}],\"name\":\"setAcceptEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/EtherReceiverMock.sol\":\"EtherReceiverMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/EtherReceiverMock.sol\":{\"keccak256\":\"0x7fe0f155c4429ed9a807a63db72067b2270d3a8819612d44b3557a4d2906e4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d59f2bc5fad2edc486a6bb01f8c784e15847389f6d7e55b752ecf806850baeb6\",\"dweb:/ipfs/QmYaqJ9q63N26ggz2FiYb6BdGJiucAib2ryLXVfu9QLWCM\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610116806100206000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160cc565b92915050565b60006020828403121560a65760a560c7565b5b600060b2848285016080565b91505092915050565b60008115159050919050565b600080fd5b60d38160bb565b811460dd57600080fd5b5056fea2646970667358221220eb4d141d1a93003e382c376b7a996fe3e952e322c0a492d2655ae26030a7edd264736f6c63430008070033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160cc565b92915050565b60006020828403121560a65760a560c7565b5b600060b2848285016080565b91505092915050565b60008115159050919050565b600080fd5b60d38160bb565b811460dd57600080fd5b5056fea2646970667358221220eb4d141d1a93003e382c376b7a996fe3e952e322c0a492d2655ae26030a7edd264736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1017:267",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "56:84:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "66:29:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "88:6:267"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "75:12:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:20:267"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "66:5:267"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "128:5:267"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "104:23:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:30:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "104:30:267"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "34:6:267",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "42:3:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "50:5:267",
                "type": ""
              }
            ],
            "src": "7:133:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "209:260:267",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "255:83:267",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "257:77:267"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "257:79:267"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "257:79:267"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "230:7:267"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:267"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "226:3:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "226:23:267"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "251:2:267",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "222:3:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "222:32:267"
                  },
                  "nodeType": "YulIf",
                  "src": "219:119:267"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "348:114:267",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "363:15:267",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "377:1:267",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "367:6:267",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "392:60:267",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "424:9:267"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "435:6:267"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "420:3:267"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "420:22:267"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "444:7:267"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "402:17:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "402:50:267"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "392:6:267"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "179:9:267",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "190:7:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "202:6:267",
                "type": ""
              }
            ],
            "src": "146:323:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "515:35:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "525:19:267",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "541:2:267",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "535:5:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "535:9:267"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:267"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "508:6:267",
                "type": ""
              }
            ],
            "src": "475:75:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "598:48:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "608:32:267",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "633:5:267"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "626:6:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:13:267"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "619:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:21:267"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "608:7:267"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "580:5:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "590:7:267",
                "type": ""
              }
            ],
            "src": "556:90:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:28:267",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "758:1:267",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:1:267",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:12:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "751:12:267"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "652:117:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "864:28:267",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "881:1:267",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "884:1:267",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "874:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "874:12:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "874:12:267"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "775:117:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "938:76:267",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "992:16:267",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1001:1:267",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1004:1:267",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "994:6:267"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "994:12:267"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "994:12:267"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "961:5:267"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "983:5:267"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "968:14:267"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "968:21:267"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "958:2:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "958:32:267"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:40:267"
                  },
                  "nodeType": "YulIf",
                  "src": "948:60:267"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "931:5:267",
                "type": ""
              }
            ],
            "src": "898:116:267"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 267,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "62:273:69:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "62:273:69:-:0;;;;;;;;;;;;;;;;;;;;;;;276:12;;;;;;;;;;271:54;;305:8;;;271:54;62:273;;;;;130:94;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;205:11;190:12;;:26;;;;;;;;;;;;;;;;;;130:94;:::o;7:133:267:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;556:90::-;590:7;633:5;626:13;619:21;608:32;;556:90;;;:::o;775:117::-;884:1;881;874:12;898:116;968:21;983:5;968:21;:::i;:::-;961:5;958:32;948:60;;1004:1;1001;994:12;948:60;898:116;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract EtherReceiverMock {\r\n    bool private _acceptEther;\r\n\r\n    function setAcceptEther(bool acceptEther) public {\r\n        _acceptEther = acceptEther;\r\n    }\r\n\r\n    receive () external payable {\r\n        if (!_acceptEther) {\r\n            revert();\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/EtherReceiverMock.sol",
  "ast": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        9166
      ]
    },
    "id": 9167,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9142,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:69"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9166,
        "linearizedBaseContracts": [
          9166
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "71:17:69",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9144,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "109:12:69",
            "nodeType": "VariableDeclaration",
            "scope": 9166,
            "src": "96:25:69",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9143,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "96:4:69",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9153,
              "nodeType": "Block",
              "src": "179:45:69",
              "statements": [
                {
                  "expression": {
                    "id": 9151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9149,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9144,
                      "src": "190:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9150,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9146,
                      "src": "205:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "190:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9152,
                  "nodeType": "ExpressionStatement",
                  "src": "190:26:69"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 9154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "139:14:69",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9146,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "159:11:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 9154,
                  "src": "154:16:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "154:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "153:18:69"
            },
            "returnParameters": {
              "id": 9148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "179:0:69"
            },
            "scope": 9166,
            "src": "130:94:69",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9164,
              "nodeType": "Block",
              "src": "260:72:69",
              "statements": [
                {
                  "condition": {
                    "id": 9158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "275:13:69",
                    "subExpression": {
                      "id": 9157,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9144,
                      "src": "276:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9163,
                  "nodeType": "IfStatement",
                  "src": "271:54:69",
                  "trueBody": {
                    "id": 9162,
                    "nodeType": "Block",
                    "src": "290:35:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9159,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "305:6:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "305:8:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9161,
                        "nodeType": "ExpressionStatement",
                        "src": "305:8:69"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 9165,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:2:69"
            },
            "returnParameters": {
              "id": 9156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "260:0:69"
            },
            "scope": 9166,
            "src": "232:100:69",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9167,
        "src": "62:273:69",
        "usedErrors": []
      }
    ],
    "src": "35:302:69"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        9166
      ]
    },
    "id": 9167,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9142,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:69"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9166,
        "linearizedBaseContracts": [
          9166
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "71:17:69",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9144,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "109:12:69",
            "nodeType": "VariableDeclaration",
            "scope": 9166,
            "src": "96:25:69",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9143,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "96:4:69",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9153,
              "nodeType": "Block",
              "src": "179:45:69",
              "statements": [
                {
                  "expression": {
                    "id": 9151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9149,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9144,
                      "src": "190:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9150,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9146,
                      "src": "205:11:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "190:26:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9152,
                  "nodeType": "ExpressionStatement",
                  "src": "190:26:69"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 9154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "139:14:69",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9146,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "159:11:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 9154,
                  "src": "154:16:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "154:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "153:18:69"
            },
            "returnParameters": {
              "id": 9148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "179:0:69"
            },
            "scope": 9166,
            "src": "130:94:69",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9164,
              "nodeType": "Block",
              "src": "260:72:69",
              "statements": [
                {
                  "condition": {
                    "id": 9158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "275:13:69",
                    "subExpression": {
                      "id": 9157,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9144,
                      "src": "276:12:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9163,
                  "nodeType": "IfStatement",
                  "src": "271:54:69",
                  "trueBody": {
                    "id": 9162,
                    "nodeType": "Block",
                    "src": "290:35:69",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9159,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "305:6:69",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 9160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "305:8:69",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9161,
                        "nodeType": "ExpressionStatement",
                        "src": "305:8:69"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 9165,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:2:69"
            },
            "returnParameters": {
              "id": 9156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "260:0:69"
            },
            "scope": 9166,
            "src": "232:100:69",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9167,
        "src": "62:273:69",
        "usedErrors": []
      }
    ],
    "src": "35:302:69"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-29T17:48:49.011Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}