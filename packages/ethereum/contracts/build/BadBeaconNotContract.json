{
  "contractName": "BadBeaconNotContract",
  "abi": [
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/BadBeacon.sol\":\"BadBeaconNotContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/BadBeacon.sol\":{\"keccak256\":\"0x0dd690e61996335053f11526c142d74ad7fd5526b2f54abf41da38abcf765b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcfd647569800c9e74f038fc572bcacac7a818e3f9302c988baa0519c4addd74\",\"dweb:/ipfs/QmbmoJtgjKFmMxt5Rhsi2cH7gsT2bsTUP5heAkGpU4Xt3B\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b60336047565b604051603e9190605d565b60405180910390f35b60006001905090565b6057816076565b82525050565b6000602082019050607060008301846050565b92915050565b6000607f826086565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220f9196501422397a72274088475841e821d36aceb69f96cc6f6f8ee15cba912be64736f6c63430008070033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80635c60da1b14602d575b600080fd5b60336047565b604051603e9190605d565b60405180910390f35b60006001905090565b6057816076565b82525050565b6000602082019050607060008301846050565b92915050565b6000607f826086565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220f9196501422397a72274088475841e821d36aceb69f96cc6f6f8ee15cba912be64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:590:267",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:267",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:267"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:267"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:267"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:267"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:267",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:267",
                "type": ""
              }
            ],
            "src": "7:118:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "229:124:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "239:26:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "251:9:267"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "262:2:267",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "247:3:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "247:18:267"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "239:4:267"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "319:6:267"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "332:9:267"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "343:1:267",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:17:267"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "275:43:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:71:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "275:71:267"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "201:9:267",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "213:6:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "224:4:267",
                "type": ""
              }
            ],
            "src": "131:222:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "404:51:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "414:35:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "443:5:267"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "425:17:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:24:267"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "414:7:267"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "386:5:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "396:7:267",
                "type": ""
              }
            ],
            "src": "359:96:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "506:81:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "516:65:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "531:5:267"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "538:42:267",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:54:267"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "516:7:267"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "488:5:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "498:7:267",
                "type": ""
              }
            ],
            "src": "461:126:267"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
      "id": 267,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "95:136:24:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "95:136:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;181:7;216:3;201:19;;132:96;:::o;7:118:267:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:96::-;396:7;425:24;443:5;425:24;:::i;:::-;414:35;;359:96;;;:::o;461:126::-;498:7;538:42;531:5;527:54;516:65;;461:126;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract BadBeaconNoImpl {\r\n}\r\n\r\ncontract BadBeaconNotContract {\r\n    function implementation() external pure returns (address) {\r\n        return address(0x1);\r\n    }\r\n}\r\n",
  "sourcePath": "C:/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/BadBeacon.sol",
  "ast": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/BadBeacon.sol",
    "exportedSymbols": {
      "BadBeaconNoImpl": [
        5677
      ],
      "BadBeaconNotContract": [
        5689
      ]
    },
    "id": 5690,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5676,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:24"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5677,
        "linearizedBaseContracts": [
          5677
        ],
        "name": "BadBeaconNoImpl",
        "nameLocation": "71:15:24",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 5690,
        "src": "62:29:24",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5689,
        "linearizedBaseContracts": [
          5689
        ],
        "name": "BadBeaconNotContract",
        "nameLocation": "104:20:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5687,
              "nodeType": "Block",
              "src": "190:38:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307831",
                        "id": 5684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "216:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "0x1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 5683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "208:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5682,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "208:7:24",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "208:12:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5681,
                  "id": 5686,
                  "nodeType": "Return",
                  "src": "201:19:24"
                }
              ]
            },
            "functionSelector": "5c60da1b",
            "id": 5688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "141:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:2:24"
            },
            "returnParameters": {
              "id": 5681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5688,
                  "src": "181:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "180:9:24"
            },
            "scope": 5689,
            "src": "132:96:24",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5690,
        "src": "95:136:24",
        "usedErrors": []
      }
    ],
    "src": "35:198:24"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/BadBeacon.sol",
    "exportedSymbols": {
      "BadBeaconNoImpl": [
        5677
      ],
      "BadBeaconNotContract": [
        5689
      ]
    },
    "id": 5690,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5676,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:24"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5677,
        "linearizedBaseContracts": [
          5677
        ],
        "name": "BadBeaconNoImpl",
        "nameLocation": "71:15:24",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 5690,
        "src": "62:29:24",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5689,
        "linearizedBaseContracts": [
          5689
        ],
        "name": "BadBeaconNotContract",
        "nameLocation": "104:20:24",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5687,
              "nodeType": "Block",
              "src": "190:38:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307831",
                        "id": 5684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "216:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "0x1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 5683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "208:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5682,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "208:7:24",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "208:12:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5681,
                  "id": 5686,
                  "nodeType": "Return",
                  "src": "201:19:24"
                }
              ]
            },
            "functionSelector": "5c60da1b",
            "id": 5688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "141:14:24",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "155:2:24"
            },
            "returnParameters": {
              "id": 5681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5688,
                  "src": "181:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "180:9:24"
            },
            "scope": 5689,
            "src": "132:96:24",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5690,
        "src": "95:136:24",
        "usedErrors": []
      }
    ],
    "src": "35:198:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-29T17:48:47.783Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}