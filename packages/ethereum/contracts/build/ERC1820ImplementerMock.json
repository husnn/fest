{
  "contractName": "ERC1820ImplementerMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "registerInterfaceForAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"registerInterfaceForAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"details\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol\":\"ERC1820ImplementerMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol\":{\"keccak256\":\"0x307a5c88942df90fc3a0eb15c1ce50af7d1acfcb95f30e8f617760d3308cd423\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28e2965361dcd757db77be5bb64b41b847dd6ccc0b745939af8a9040aa509970\",\"dweb:/ipfs/QmXbWwzEDTgW3K6V6S5AobF8PX3LYUS598YZnvM5kPMY3e\"]},\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0x6a85355a61203fe941e49074cd77ebd9ec1f707aea3c0933a41cde22670f7671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd320245125b1e99d567d5f7fe9c08b5d458438b5333eaf59900988a8b2096ee\",\"dweb:/ipfs/QmXe67TrD5jHMG79WdL477BGQJHE1xBRMpUaJBTAhD96by\"]},\"/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xd658a25ce73a588bba55fa518ea79b3a581f14c411fb44a38e78f87e3a09ffcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791297362508954c107c100110591cdd6b973a7257262aaf2630917552672a29\",\"dweb:/ipfs/QmWqXwQa6S9xQXx5oy5TB3N7TmyedVy3sJnfTLWP4jCsbp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b610055600480360381019061005091906101c1565b610087565b6040516100629190610210565b60405180910390f35b610085600480360381019061008091906101c1565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000813590506101a68161026c565b92915050565b6000813590506101bb81610283565b92915050565b600080604083850312156101d8576101d7610267565b5b60006101e6858286016101ac565b92505060206101f785828601610197565b9150509250929050565b61020a8161023d565b82525050565b60006020820190506102256000830184610201565b92915050565b600061023682610247565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6102758161022b565b811461028057600080fd5b50565b61028c8161023d565b811461029757600080fd5b5056fea26469706673582212200deeaa51971fd365ab4e82e868ab29a767097d83abd58ac280124a2f08d6d71964736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b610055600480360381019061005091906101c1565b610087565b6040516100629190610210565b60405180910390f35b610085600480360381019061008091906101c1565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000813590506101a68161026c565b92915050565b6000813590506101bb81610283565b92915050565b600080604083850312156101d8576101d7610267565b5b60006101e6858286016101ac565b92505060206101f785828601610197565b9150509250929050565b61020a8161023d565b82525050565b60006020820190506102256000830184610201565b92915050565b600061023682610247565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6102758161022b565b811461028057600080fd5b50565b61028c8161023d565b811461029757600080fd5b5056fea26469706673582212200deeaa51971fd365ab4e82e868ab29a767097d83abd58ac280124a2f08d6d71964736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2026:267",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:267"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:267"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:267"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:267"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:267"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:267",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:267",
                "type": ""
              }
            ],
            "src": "7:139:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:267"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:267"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:267"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:267"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:267"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:267",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:267",
                "type": ""
              }
            ],
            "src": "152:139:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "380:391:267",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "426:83:267",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "428:77:267"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:79:267"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "428:79:267"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "401:7:267"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "410:9:267"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "397:3:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:23:267"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "422:2:267",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "393:3:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:32:267"
                  },
                  "nodeType": "YulIf",
                  "src": "390:119:267"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "519:117:267",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "534:15:267",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:1:267",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "538:6:267",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "563:63:267",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "598:9:267"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "609:6:267"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "594:3:267"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "594:22:267"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "618:7:267"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "573:20:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "573:53:267"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "563:6:267"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "646:118:267",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "661:16:267",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:267",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "665:6:267",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "691:63:267",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "726:9:267"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "737:6:267"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "722:3:267"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "722:22:267"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "746:7:267"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "701:20:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:53:267"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "691:6:267"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "342:9:267",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "353:7:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "365:6:267",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "373:6:267",
                "type": ""
              }
            ],
            "src": "297:474:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "842:53:267",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "859:3:267"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "882:5:267"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "864:17:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "864:24:267"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "852:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:37:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "852:37:267"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "830:5:267",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "837:3:267",
                "type": ""
              }
            ],
            "src": "777:118:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "999:124:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1009:26:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1021:9:267"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1032:2:267",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1017:3:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:18:267"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1009:4:267"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1089:6:267"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1102:9:267"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1113:1:267",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1098:3:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1098:17:267"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1045:43:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:71:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1045:71:267"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "971:9:267",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "983:6:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "994:4:267",
                "type": ""
              }
            ],
            "src": "901:222:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1169:35:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1179:19:267",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1195:2:267",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1189:5:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:9:267"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:267"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1162:6:267",
                "type": ""
              }
            ],
            "src": "1129:75:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1255:51:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1265:35:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1294:5:267"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1276:17:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1276:24:267"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1265:7:267"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1237:5:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1247:7:267",
                "type": ""
              }
            ],
            "src": "1210:96:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1357:32:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1367:16:267",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1378:5:267"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1367:7:267"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1339:5:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1349:7:267",
                "type": ""
              }
            ],
            "src": "1312:77:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1440:81:267",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1450:65:267",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1465:5:267"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1472:42:267",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1461:3:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1461:54:267"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1450:7:267"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1422:5:267",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1432:7:267",
                "type": ""
              }
            ],
            "src": "1395:126:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1616:28:267",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1633:1:267",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1636:1:267",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1626:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:12:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1626:12:267"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1527:117:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1739:28:267",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1756:1:267",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1759:1:267",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1749:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1749:12:267"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1749:12:267"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1650:117:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1816:79:267",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1873:16:267",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1882:1:267",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1885:1:267",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1875:6:267"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1875:12:267"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1875:12:267"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1839:5:267"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1864:5:267"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1846:17:267"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1846:24:267"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1836:2:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:35:267"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1829:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:43:267"
                  },
                  "nodeType": "YulIf",
                  "src": "1826:63:267"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1809:5:267",
                "type": ""
              }
            ],
            "src": "1773:122:267"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1944:79:267",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2001:16:267",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2010:1:267",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2013:1:267",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2003:6:267"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2003:12:267"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2003:12:267"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1967:5:267"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1992:5:267"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "1974:17:267"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1974:24:267"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1964:2:267"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1964:35:267"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1957:6:267"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1957:43:267"
                  },
                  "nodeType": "YulIf",
                  "src": "1954:63:267"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1937:5:267",
                "type": ""
              }
            ],
            "src": "1901:122:267"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 267,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "115:215:47:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "115:215:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:236:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;175:153:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;717:236:166;836:7;862:20;:35;883:13;862:35;;;;;;;;;;;:44;898:7;862:44;;;;;;;;;;;;;;;;;;;;;;;;;:84;;941:4;933:13;;862:84;;;510:33;862:84;855:91;;717:236;;;;:::o;175:153:47:-;269:52;298:13;313:7;269:28;:52::i;:::-;175:153;;:::o;1188:163:166:-;1340:4;1293:20;:35;1314:13;1293:35;;;;;;;;;;;:44;1329:7;1293:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;1188:163;;:::o;7:139:267:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:119;;;428:79;;:::i;:::-;390:119;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;297:474;;;;;:::o;777:118::-;864:24;882:5;864:24;:::i;:::-;859:3;852:37;777:118;;:::o;901:222::-;994:4;1032:2;1021:9;1017:18;1009:26;;1045:71;1113:1;1102:9;1098:17;1089:6;1045:71;:::i;:::-;901:222;;;;:::o;1210:96::-;1247:7;1276:24;1294:5;1276:24;:::i;:::-;1265:35;;1210:96;;;:::o;1312:77::-;1349:7;1378:5;1367:16;;1312:77;;;:::o;1395:126::-;1432:7;1472:42;1465:5;1461:54;1450:65;;1395:126;;;:::o;1650:117::-;1759:1;1756;1749:12;1773:122;1846:24;1864:5;1846:24;:::i;:::-;1839:5;1836:35;1826:63;;1885:1;1882;1875:12;1826:63;1773:122;:::o;1901:::-;1974:24;1992:5;1974:24;:::i;:::-;1967:5;1964:35;1954:63;;2013:1;2010;2003:12;1954:63;1901:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/ERC1820Implementer.sol\";\n\ncontract ERC1820ImplementerMock is ERC1820Implementer {\n    function registerInterfaceForAddress(bytes32 interfaceHash, address account) public {\n        _registerInterfaceForAddress(interfaceHash, account);\n    }\n}\n",
  "sourcePath": "C:/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol",
  "ast": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        22191
      ],
      "ERC1820ImplementerMock": [
        7070
      ],
      "IERC1820Implementer": [
        22217
      ]
    },
    "id": 7071,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7053,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:47"
      },
      {
        "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 7054,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7071,
        "sourceUnit": 22192,
        "src": "58:55:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7055,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22191,
              "src": "150:18:47"
            },
            "id": 7056,
            "nodeType": "InheritanceSpecifier",
            "src": "150:18:47"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7070,
        "linearizedBaseContracts": [
          7070,
          22191,
          22217
        ],
        "name": "ERC1820ImplementerMock",
        "nameLocation": "124:22:47",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7068,
              "nodeType": "Block",
              "src": "259:69:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7064,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7058,
                        "src": "298:13:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7065,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7060,
                        "src": "313:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7063,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22190,
                      "src": "269:28:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:52:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7067,
                  "nodeType": "ExpressionStatement",
                  "src": "269:52:47"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 7069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nameLocation": "184:27:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7058,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "220:13:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "212:21:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7057,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7060,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "243:7:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "235:15:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "211:40:47"
            },
            "returnParameters": {
              "id": 7062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:47"
            },
            "scope": 7070,
            "src": "175:153:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7071,
        "src": "115:215:47",
        "usedErrors": []
      }
    ],
    "src": "33:298:47"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        22191
      ],
      "ERC1820ImplementerMock": [
        7070
      ],
      "IERC1820Implementer": [
        22217
      ]
    },
    "id": 7071,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7053,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:47"
      },
      {
        "absolutePath": "/C/Users/Husnain/Documents/Projects/Fanbase/New/fanbase/packages/ethereum/contracts/solidity/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 7054,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7071,
        "sourceUnit": 22192,
        "src": "58:55:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7055,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22191,
              "src": "150:18:47"
            },
            "id": 7056,
            "nodeType": "InheritanceSpecifier",
            "src": "150:18:47"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7070,
        "linearizedBaseContracts": [
          7070,
          22191,
          22217
        ],
        "name": "ERC1820ImplementerMock",
        "nameLocation": "124:22:47",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7068,
              "nodeType": "Block",
              "src": "259:69:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7064,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7058,
                        "src": "298:13:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 7065,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7060,
                        "src": "313:7:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7063,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22190,
                      "src": "269:28:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:52:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7067,
                  "nodeType": "ExpressionStatement",
                  "src": "269:52:47"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 7069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nameLocation": "184:27:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7058,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "220:13:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "212:21:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7057,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7060,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "243:7:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7069,
                  "src": "235:15:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "211:40:47"
            },
            "returnParameters": {
              "id": 7062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:47"
            },
            "scope": 7070,
            "src": "175:153:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7071,
        "src": "115:215:47",
        "usedErrors": []
      }
    ],
    "src": "33:298:47"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-16T20:02:18.598Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "details": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}